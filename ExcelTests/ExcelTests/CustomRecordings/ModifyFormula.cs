///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ExcelTests.CustomRecordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ModifyFormula recording.
    /// </summary>
    [TestModule("6f7ee883-347a-4df1-b5be-325ee336011c", ModuleType.Recording, 1)]
    public partial class ModifyFormula : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::ExcelTests.ExcelTestsRepository repository.
        /// </summary>
        public static global::ExcelTests.ExcelTestsRepository repo = global::ExcelTests.ExcelTestsRepository.Instance;

        static ModifyFormula instance = new ModifyFormula();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ModifyFormula()
        {
            NewFormula = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ModifyFormula Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewFormula;

        /// <summary>
        /// Gets or sets the value of variable NewFormula.
        /// </summary>
        [TestVariable("793ff412-73a6-4a5a-8827-32558aa44f46")]
        public string NewFormula
        {
            get { return _NewFormula; }
            set { _NewFormula = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Book1Excel.CellA6' at Center.", repo.Book1Excel.CellA6Info, new RecordItemIndex(0));
            repo.Book1Excel.CellA6.DoubleClick();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Old Formula", repo.Book1Excel.EXCEL1, false, new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'Book1Excel.CellA6'.", repo.Book1Excel.CellA6Info, new RecordItemIndex(2));
            repo.Book1Excel.CellA6.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewFormula' with focus on 'Book1Excel.CellA6'.", repo.Book1Excel.CellA6Info, new RecordItemIndex(3));
            repo.Book1Excel.CellA6.PressKeys(NewFormula);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'Book1Excel.CellA6'.", repo.Book1Excel.CellA6Info, new RecordItemIndex(4));
            repo.Book1Excel.CellA6.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "New Formula", repo.Book1Excel.EXCEL1, false, new RecordItemIndex(5));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
