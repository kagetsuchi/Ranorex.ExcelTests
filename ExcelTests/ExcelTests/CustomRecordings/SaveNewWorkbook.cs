///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ExcelTests.CustomRecordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SaveNewWorkbook recording.
    /// </summary>
    [TestModule("591f34ed-9e0b-4f18-b21d-e5a7991b0eca", ModuleType.Recording, 1)]
    public partial class SaveNewWorkbook : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::ExcelTests.ExcelTestsRepository repository.
        /// </summary>
        public static global::ExcelTests.ExcelTestsRepository repo = global::ExcelTests.ExcelTestsRepository.Instance;

        static SaveNewWorkbook instance = new SaveNewWorkbook();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SaveNewWorkbook()
        {
            ExcelFilename = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SaveNewWorkbook Instance
        {
            get { return instance; }
        }

#region Variables

        string _ExcelFilename;

        /// <summary>
        /// Gets or sets the value of variable ExcelFilename.
        /// </summary>
        [TestVariable("b7ab26b1-279e-404a-bd3a-d390381c3bfb")]
        public string ExcelFilename
        {
            get { return _ExcelFilename; }
            set { _ExcelFilename = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+S' Press with focus on 'Book1Excel'.", repo.Book1Excel.SelfInfo, new RecordItemIndex(0));
            Keyboard.PrepareFocus(repo.Book1Excel.Self);
            Keyboard.Press(System.Windows.Forms.Keys.S | System.Windows.Forms.Keys.Control, 31, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ExcelFilename'.", new RecordItemIndex(1));
            Keyboard.Press(ExcelFilename);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Book1Excel.Save1' at Center.", repo.Book1Excel.Save1Info, new RecordItemIndex(2));
            repo.Book1Excel.Save1.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
